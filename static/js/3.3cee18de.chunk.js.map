{"version":3,"file":"static/js/3.3cee18de.chunk.js","mappings":"4LAAA,SAASA,EAAEC,GAAG,IAAIC,EAAEC,EAAEC,EAAE,GAAG,GAAG,iBAAiBH,GAAG,iBAAiBA,EAAEG,GAAGH,OAAO,GAAG,iBAAiBA,EAAE,GAAGI,MAAMC,QAAQL,GAAG,IAAIC,EAAE,EAAEA,EAAED,EAAEM,OAAOL,IAAID,EAAEC,KAAKC,EAAEH,EAAEC,EAAEC,OAAOE,IAAIA,GAAG,KAAKA,GAAGD,QAAQ,IAAID,KAAKD,EAAEA,EAAEC,KAAKE,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAE,CAA0H,MAAnH,WAAgB,IAAI,IAAIH,EAAEC,EAAEC,EAAE,EAAEC,EAAE,GAAGD,EAAEK,UAAUD,SAASN,EAAEO,UAAUL,QAAQD,EAAEF,EAAEC,MAAMG,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAE,ECClW,EAA8B,iCAA9B,EAA8E,kCAA9E,EAA4H,+BAA5H,EAAwK,gC,kBCCpKK,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKhB,SAAWiB,EAAKjB,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASgB,EAAKhB,OAETkB,EAAI,EAAGA,EAAIlB,EAAQkB,IAC1B,IAAKR,EAAcM,EAAKE,GAAID,EAAKC,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBT,GACtCU,EAAoB,IAAZP,EA/Gd,SAA8BQ,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRvB,CACR,EACDwB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBf,GAtFnD,SAAwBF,EAASQ,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOvB,CACR,CAwBD,MAAO,CACLqB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAAStB,IAEf6B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQ/B,OAASa,GACnBkB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAexB,EAASE,GAEvF,SAASuB,IACP,IAAIb,EAAQL,EAAMG,IAAItB,WAEtB,GAAIwB,IAAUvB,EAAW,CAIvB,GAFAuB,EAAQlB,EAAKgC,MAAM,KAAMtC,WAErBa,EAAqB,CACvB,IAAIiB,EAAUX,EAAMO,aAChBa,EAAgBT,EAAQU,MAAK,SAAUnB,GACzC,OAAOR,EAAoBQ,EAAMG,MAAOA,EACzC,IAEGe,IACFf,EAAQe,EAAcf,MAEzB,CAEDL,EAAMM,IAAIzB,UAAWwB,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASI,WAAa,WACpB,OAAOtB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASK,EAAgBC,GACvB,IAAIC,EAAe/C,MAAMC,QAAQ6C,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaC,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBH,EAAaI,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC1F,IAAEI,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGJ,EAAkB,IACvI,CAED,OAAOH,CACR,CAEM,SAASQ,EAAsBC,GACpC,IAAK,IAAIC,EAAOtD,UAAUD,OAAQwD,EAAyB,IAAI1D,MAAMyD,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKxD,UAAUwD,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQ1D,UAAUD,OAAQ4C,EAAQ,IAAI9C,MAAM6D,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFhB,EAAMgB,GAAS3D,UAAU2D,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBnC,GAGdoC,EAAarB,EAAMR,MAQvB,GAN0B,kBAAf6B,IACTF,EAAwBE,EAExBA,EAAarB,EAAMR,OAGK,oBAAf6B,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBtE,MAAMC,QAAQiE,GAAkBA,EAAiB,CAACA,GACxEnB,EAAeF,EAAgBC,GAC/ByB,EAAqBf,EAAQf,WAAM,EAAQ,CAAC,WAG9C,OAFAuB,IAEOG,EAAW1B,MAAM,KAAMtC,UAC/B,GAAEqE,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACTxE,EAAS6C,EAAa7C,OAEjBkB,EAAI,EAAGA,EAAIlB,EAAQkB,IAG1BsD,EAAOC,KAAK5B,EAAa3B,GAAGqB,MAAM,KAAMtC,YAK1C,OADA4D,EAAcQ,EAAmB9B,MAAM,KAAMiC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpBxB,aAAcA,EACd+B,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,IAAIA,EAAgCL,EAAsB/C,GCrGpDyE,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAEtBC,EAAc,SAAAF,GAAK,OAAIA,EAAMC,SAASE,KAAnB,EACnBC,EAAkB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,SAAnB,EAEvBC,EAAuB5B,EAClC,CAACqB,EAL+B,SAAAC,GAAK,OAAIA,EAAMO,OAAOC,MAAjB,IAMrC,SAACP,EAAUM,GACT,OAAON,EAASM,QAAO,SAAAE,GAAO,OAC5BA,EAAQvC,KAAKwC,cAAcC,SAASJ,EAAOG,cADf,GAG/B,I,SCNUE,EAAc,WACzB,IAAMX,GAAWY,EAAAA,EAAAA,IAAYd,GAEvBe,GAAWC,EAAAA,EAAAA,MAEjB,SAASC,EAAwBC,GAC/B,GAA2B,kBAAhBA,EACT,OAAOA,EAKT,IAFA,IAAIC,EAAkB,GAEbhF,EAAI,EAAGA,EAAI+E,EAAYjG,OAAQkB,IAC5B,IAANA,GAAWA,EAAI,IAAM,IACvBgF,GAAmB,KAGrBA,GAAmBD,EAAY/E,GAGjC,OAAOgF,CACR,CAuBD,OACE,+BACE,kBAAMC,SAvBW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACbrD,EAAOoD,EAAKpD,KAAKzB,MACjB+E,EAAQF,EAAKG,OAAOhF,MAK1B,GAHwBwD,EAASxC,MAC/B,SAAAgD,GAAO,OAAIA,EAAQvC,KAAKwC,gBAAkBxC,EAAKwC,aAAxC,IAGPgB,MAAM,GAAD,OAAIxD,EAAJ,8BADP,CAIA,IAAMyD,EAAO,CACXzD,KAAAA,EACAuD,OAAQT,EAAwBQ,IAElCV,GAASc,EAAAA,EAAAA,IAAWD,IACpBL,EAAKO,OANJ,CAOF,EAIiCC,UAAWC,EAAKC,GAA9C,WACE,mBAAOF,UAAWC,EAAKC,GAAvB,kBAEE,kBACEF,UAAWC,EAAKC,GAChBC,KAAK,OACL/D,KAAK,OACLgE,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAON,UAAWC,EAAKC,GAAvB,oBAEE,kBACEF,UAAWC,EAAKC,GAChBC,KAAK,MACL/D,KAAK,SACLgE,QAAQ,6CACRC,MAAM,8BACNE,UAAW,GACXD,UAAQ,QAGZ,mBAAQN,UAAWC,EAAKC,GAAxB,6BAIP,EChFD,EAA8B,iCCA9B,EAAkC,iCAAlC,EAAoF,gCCKvEM,EAAU,SAAC,GAAiB,IAAf7B,EAAc,EAAdA,QAClBK,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBACEe,UAAWC,EAAKC,GAEhB9D,KAAMuC,EAAQvC,KAHhB,WAKE,4BACGuC,EAAQvC,KADX,KACmBuC,EAAQe,UAE3B,mBAAQM,UAAWC,EAAKC,GAAqBO,QAV5B,kBAAMzB,GAAS0B,EAAAA,EAAAA,IAAc/B,EAAQgC,IAArC,EAUjB,sBANKhC,EAAQgC,GAWlB,ECfYC,EAAc,WACzB,IAAMzC,GAAWY,EAAAA,EAAAA,IAAYP,GAEvBqC,GAAeC,EAAAA,EAAAA,UAAQ,kBAAM3C,CAAN,GAAgB,CAACA,IAE9C,OACE,eAAI6B,UAAWC,EAAKC,GAApB,SACGW,EAAa1E,KAAI,SAAAwC,GAAO,OACvB,SAAC6B,EAAD,CAAS7B,QAASA,GADK,KAK9B,ECnBD,EAAyB,uBAAzB,EAA8D,4B,SCIjDoC,EAAS,WACpB,IAAM/B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,+BACE,iBAAKe,UAAWC,EAAKC,GAArB,WACE,gDACA,kBACEF,UAAWC,EAAKC,GAChBc,SAXY,SAAA1B,GAClB,IAAM2B,EAAa3B,EAAM4B,OAAOvG,MAChCqE,GAASmC,EAAAA,EAAAA,GAAgBF,GAC1B,EASOd,KAAK,OACL/D,KAAK,OACLkE,UAAQ,QAKjB,E,SCfc,SAASc,IACtB,IAAMpC,GAAWC,EAAAA,EAAAA,MACXZ,GAAQU,EAAAA,EAAAA,IAAYX,GACpBG,GAAYQ,EAAAA,EAAAA,IAAYT,GAM9B,OAJA+C,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,KAGF,iCACE,uCACA,SAACF,EAAD,KACA,sCACA,SAACiC,EAAD,IACCxC,IAAcF,IACb,SAAC,KAAD,CACEkD,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAGzD,SAACjB,EAAD,MAGL,C","sources":["../node_modules/clsx/dist/clsx.m.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.js","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"inputContact\":\"ContactForm_inputContact__ylxPW\",\"labelForm\":\"ContactForm_labelForm__DEnf8\",\"buttonForm\":\"ContactForm_buttonForm__RQPsC\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilterStatus = state => state.filter.status;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilterStatus],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React from 'react';\nimport clsx from 'clsx';\nimport css from './ContactForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  function handleFormatPhoneNumber(phoneNumber) {\n    if (typeof phoneNumber !== 'string') {\n      return phoneNumber;\n    }\n\n    var formattedNumber = '';\n\n    for (var i = 0; i < phoneNumber.length; i++) {\n      if (i !== 0 && i % 3 === 0) {\n        formattedNumber += '-';\n      }\n\n      formattedNumber += phoneNumber[i];\n    }\n\n    return formattedNumber;\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.name.value;\n    const phone = form.number.value;\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (existingContact) {\n      alert(`${name} already in contacts!`);\n      return;\n    }\n    const user = {\n      name,\n      number: handleFormatPhoneNumber(phone),\n    };\n    dispatch(addContact(user));\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={clsx(css.contactForm)}>\n        <label className={clsx(css.labelForm)}>\n          Name\n          <input\n            className={clsx(css.inputContact)}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={clsx(css.labelForm)}>\n          Number\n          <input\n            className={clsx(css.inputContact)}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\d{1,4}?\\d{1,3}?\\d{1,4}\\d{1,4}\\d{1,9}\"\n            title=\"Phone number must be digits\"\n            maxLength={11}\n            required\n          />\n        </label>\n        <button className={clsx(css.buttonForm)}>Add contact</button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"Contact_contactListItem__++ahj\",\"contactListBtn\":\"Contact_contactListBtn__ohcvy\"};","import clsx from 'clsx';\nimport css from './Contact.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  return (\n    <li\n      className={clsx(css.contactListItem)}\n      key={contact.id}\n      name={contact.name}\n    >\n      <span>\n        {contact.name}: {contact.phone}\n      </span>\n      <button className={clsx(css.contactListBtn)} onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport css from './ContactList.module.css';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectFilterContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilterContacts);\n\n  const memoContacts = useMemo(() => contacts, [contacts]);\n\n  return (\n    <ul className={clsx(css.contactList)}>\n      {memoContacts.map(contact => (\n        <Contact contact={contact} />\n      ))}\n    </ul>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport clsx from 'clsx';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/filter/filterSlice';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleInput = event => {\n    const inputValue = event.target.value;\n    dispatch(setStatusFilter(inputValue));\n  };\n\n  return (\n    <>\n      <div className={clsx(css.filter)}>\n        <label>Search contacts</label>\n        <input\n          className={clsx(css.filterInput)}\n          onChange={handleInput}\n          type=\"text\"\n          name=\"name\"\n          required\n        />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { ColorRing } from 'react-loader-spinner';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n        />\n      )}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["r","e","t","f","n","Array","isArray","length","arguments","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectError","error","selectIsLoading","isLoading","selectFilterContacts","filter","status","contact","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","handleFormatPhoneNumber","phoneNumber","formattedNumber","onSubmit","event","preventDefault","form","currentTarget","phone","number","alert","user","addContact","reset","className","clsx","css","type","pattern","title","required","maxLength","Contact","onClick","deleteContact","id","ContactList","memoContacts","useMemo","Filter","onChange","inputValue","target","setStatusFilter","Contacts","useEffect","fetchContacts","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}